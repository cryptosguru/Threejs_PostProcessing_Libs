{
    "project": {
        "name": "postprocessing",
        "description": "A post processing library that provides the means to implement 2D filter effects for three.js.",
        "version": "2.0.0",
        "url": "https://github.com/vanruesc/postprocessing"
    },
    "files": {
        "src\\core\\effect-composer.js": {
            "name": "src\\core\\effect-composer.js",
            "modules": {},
            "classes": {
                "EffectComposer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\index.js": {
            "name": "src\\core\\index.js",
            "modules": {
                "core": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\adaptive-luminosity\\index.js": {
            "name": "src\\materials\\adaptive-luminosity\\index.js",
            "modules": {},
            "classes": {
                "AdaptiveLuminosityMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\bokeh\\index.js": {
            "name": "src\\materials\\bokeh\\index.js",
            "modules": {},
            "classes": {
                "BokehMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\bokeh2\\index.js": {
            "name": "src\\materials\\bokeh2\\index.js",
            "modules": {},
            "classes": {
                "Bokeh2Material": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\combine\\index.js": {
            "name": "src\\materials\\combine\\index.js",
            "modules": {},
            "classes": {
                "CombineMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\convolution\\index.js": {
            "name": "src\\materials\\convolution\\index.js",
            "modules": {},
            "classes": {
                "ConvolutionMaterial": 1,
                "KernelSize": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\copy\\index.js": {
            "name": "src\\materials\\copy\\index.js",
            "modules": {},
            "classes": {
                "CopyMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\depth\\index.js": {
            "name": "src\\materials\\depth\\index.js",
            "modules": {},
            "classes": {
                "DepthMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\dot-screen\\index.js": {
            "name": "src\\materials\\dot-screen\\index.js",
            "modules": {},
            "classes": {
                "DotScreenMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\film\\index.js": {
            "name": "src\\materials\\film\\index.js",
            "modules": {},
            "classes": {
                "FilmMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\glitch\\index.js": {
            "name": "src\\materials\\glitch\\index.js",
            "modules": {},
            "classes": {
                "GlitchMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\god-rays\\index.js": {
            "name": "src\\materials\\god-rays\\index.js",
            "modules": {},
            "classes": {
                "GodRaysMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\luminosity\\index.js": {
            "name": "src\\materials\\luminosity\\index.js",
            "modules": {},
            "classes": {
                "LuminosityMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\smaa-blend\\index.js": {
            "name": "src\\materials\\smaa-blend\\index.js",
            "modules": {},
            "classes": {
                "SMAABlendMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\smaa-color-edges\\index.js": {
            "name": "src\\materials\\smaa-color-edges\\index.js",
            "modules": {},
            "classes": {
                "SMAAColorEdgesMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\smaa-weights\\index.js": {
            "name": "src\\materials\\smaa-weights\\index.js",
            "modules": {},
            "classes": {
                "SMAAWeightsMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\tone-mapping\\index.js": {
            "name": "src\\materials\\tone-mapping\\index.js",
            "modules": {},
            "classes": {
                "ToneMappingMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\materials\\index.js": {
            "name": "src\\materials\\index.js",
            "modules": {
                "materials": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\bloom.js": {
            "name": "src\\passes\\bloom.js",
            "modules": {},
            "classes": {
                "BloomPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\blur.js": {
            "name": "src\\passes\\blur.js",
            "modules": {},
            "classes": {
                "BlurPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\bokeh.js": {
            "name": "src\\passes\\bokeh.js",
            "modules": {},
            "classes": {
                "BokehPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\bokeh2.js": {
            "name": "src\\passes\\bokeh2.js",
            "modules": {},
            "classes": {
                "Bokeh2Pass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\clear-mask.js": {
            "name": "src\\passes\\clear-mask.js",
            "modules": {},
            "classes": {
                "ClearMaskPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\depth.js": {
            "name": "src\\passes\\depth.js",
            "modules": {},
            "classes": {
                "DepthPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\dot-screen.js": {
            "name": "src\\passes\\dot-screen.js",
            "modules": {},
            "classes": {
                "DotScreenPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\film.js": {
            "name": "src\\passes\\film.js",
            "modules": {},
            "classes": {
                "FilmPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\glitch.js": {
            "name": "src\\passes\\glitch.js",
            "modules": {},
            "classes": {
                "GlitchPass": 1,
                "GlitchMode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\god-rays.js": {
            "name": "src\\passes\\god-rays.js",
            "modules": {},
            "classes": {
                "GodRaysPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\index.js": {
            "name": "src\\passes\\index.js",
            "modules": {
                "passes": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\mask.js": {
            "name": "src\\passes\\mask.js",
            "modules": {},
            "classes": {
                "MaskPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\pass.js": {
            "name": "src\\passes\\pass.js",
            "modules": {},
            "classes": {
                "Pass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\render.js": {
            "name": "src\\passes\\render.js",
            "modules": {},
            "classes": {
                "RenderPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\save.js": {
            "name": "src\\passes\\save.js",
            "modules": {},
            "classes": {
                "SavePass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\shader.js": {
            "name": "src\\passes\\shader.js",
            "modules": {},
            "classes": {
                "ShaderPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\smaa.js": {
            "name": "src\\passes\\smaa.js",
            "modules": {},
            "classes": {
                "SMAAPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\texture.js": {
            "name": "src\\passes\\texture.js",
            "modules": {},
            "classes": {
                "TexturePass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\passes\\tone-mapping.js": {
            "name": "src\\passes\\tone-mapping.js",
            "modules": {},
            "classes": {
                "ToneMappingPass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\index.js": {
            "name": "src\\index.js",
            "modules": {
                "postprocessing": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "core": {
            "name": "core",
            "submodules": {},
            "elements": {},
            "classes": {
                "EffectComposer": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "postprocessing",
            "file": "src\\core\\effect-composer.js",
            "line": 5,
            "description": "Core components."
        },
        "postprocessing": {
            "name": "postprocessing",
            "submodules": {
                "core": 1,
                "materials": 1,
                "passes": 1
            },
            "elements": {},
            "classes": {
                "EffectComposer": 1,
                "AdaptiveLuminosityMaterial": 1,
                "BokehMaterial": 1,
                "Bokeh2Material": 1,
                "CombineMaterial": 1,
                "ConvolutionMaterial": 1,
                "KernelSize": 1,
                "CopyMaterial": 1,
                "DepthMaterial": 1,
                "DotScreenMaterial": 1,
                "FilmMaterial": 1,
                "GlitchMaterial": 1,
                "GodRaysMaterial": 1,
                "LuminosityMaterial": 1,
                "SMAABlendMaterial": 1,
                "SMAAColorEdgesMaterial": 1,
                "SMAAWeightsMaterial": 1,
                "ToneMappingMaterial": 1,
                "BloomPass": 1,
                "BlurPass": 1,
                "BokehPass": 1,
                "Bokeh2Pass": 1,
                "ClearMaskPass": 1,
                "DepthPass": 1,
                "DotScreenPass": 1,
                "FilmPass": 1,
                "GlitchPass": 1,
                "GlitchMode": 1,
                "GodRaysPass": 1,
                "MaskPass": 1,
                "Pass": 1,
                "RenderPass": 1,
                "SavePass": 1,
                "ShaderPass": 1,
                "SMAAPass": 1,
                "TexturePass": 1,
                "ToneMappingPass": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src\\passes\\tone-mapping.js",
            "line": 17,
            "description": "Exposure of the library components.",
            "itemtype": "main"
        },
        "materials": {
            "name": "materials",
            "submodules": {},
            "elements": {},
            "classes": {
                "AdaptiveLuminosityMaterial": 1,
                "BokehMaterial": 1,
                "Bokeh2Material": 1,
                "CombineMaterial": 1,
                "ConvolutionMaterial": 1,
                "KernelSize": 1,
                "CopyMaterial": 1,
                "DepthMaterial": 1,
                "DotScreenMaterial": 1,
                "FilmMaterial": 1,
                "GlitchMaterial": 1,
                "GodRaysMaterial": 1,
                "LuminosityMaterial": 1,
                "SMAABlendMaterial": 1,
                "SMAAColorEdgesMaterial": 1,
                "SMAAWeightsMaterial": 1,
                "ToneMappingMaterial": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\tone-mapping\\index.js",
            "line": 6,
            "description": "A collection of shader materials that are used in the post processing passes."
        },
        "passes": {
            "name": "passes",
            "submodules": {},
            "elements": {},
            "classes": {
                "BloomPass": 1,
                "BlurPass": 1,
                "BokehPass": 1,
                "Bokeh2Pass": 1,
                "ClearMaskPass": 1,
                "DepthPass": 1,
                "DotScreenPass": 1,
                "FilmPass": 1,
                "GlitchPass": 1,
                "GlitchMode": 1,
                "GodRaysPass": 1,
                "MaskPass": 1,
                "Pass": 1,
                "RenderPass": 1,
                "SavePass": 1,
                "ShaderPass": 1,
                "SMAAPass": 1,
                "TexturePass": 1,
                "ToneMappingPass": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\tone-mapping.js",
            "line": 17,
            "description": "A compilation of the post processing passes."
        }
    },
    "classes": {
        "EffectComposer": {
            "name": "EffectComposer",
            "shortname": "EffectComposer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "file": "src\\core\\effect-composer.js",
            "line": 5,
            "description": "The EffectComposer may be used in place of a normal WebGLRenderer.\n\nThe auto clear behaviour of the provided renderer will be disabled to prevent\nunnecessary clear operations.\n\nIt is common practice to use a {{#crossLink \"RenderPass\"}}{{/crossLink}} as\nthe first pass to automatically clear the screen and render the scene to a\ntexture for further processing.",
            "submodule": "core",
            "is_constructor": 1,
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer that should be used.",
                    "type": "WebGLRenderer",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "depthBuffer",
                            "description": "- Whether the main render targets should have a depth buffer.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "stencilBuffer",
                            "description": "- Whether the main render targets should have a stencil buffer.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "depthTexture",
                            "description": "- Set to true if one of your passes relies on a depth texture.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "AdaptiveLuminosityMaterial": {
            "name": "AdaptiveLuminosityMaterial",
            "shortname": "AdaptiveLuminosityMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\adaptive-luminosity\\index.js",
            "line": 6,
            "description": "An adaptive luminosity shader material.",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1
        },
        "BokehMaterial": {
            "name": "BokehMaterial",
            "shortname": "BokehMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\bokeh\\index.js",
            "line": 6,
            "description": "Depth of Field shader (Bokeh).\n\nOriginal code by Martins Upitis:\n http://artmartinsh.blogspot.com/2010/02/glsl-lens-blur-filter-with-bokeh.html",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "camera",
                    "description": "- A camera.",
                    "type": "PerspectiveCamera",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "focus",
                            "description": "- Focus distance.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "aperture",
                            "description": "- Camera aperture scale. Bigger values for shallower depth of field.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.025"
                        },
                        {
                            "name": "maxBlur",
                            "description": "- Maximum blur strength.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        }
                    ]
                }
            ]
        },
        "Bokeh2Material": {
            "name": "Bokeh2Material",
            "shortname": "Bokeh2Material",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\bokeh2\\index.js",
            "line": 6,
            "description": "Depth of Field shader version 2.\n\nOriginal code by Martins Upitis:\n http://blenderartists.org/forum/showthread.php?237488-GLSL-depth-of-field-with-bokeh-v2-4-(update)",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "camera",
                    "description": "- The main camera.",
                    "type": "PerspectiveCamera",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "- Additional options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "texelSize",
                            "description": "- The absolute screen texel size.",
                            "type": "Vector2",
                            "optional": true
                        },
                        {
                            "name": "showFocus",
                            "description": "- Whether the focus point should be highlighted.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "manualDoF",
                            "description": "- Enables manual depth of field blur.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "vignette",
                            "description": "- Enables a vignette effect.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "pentagon",
                            "description": "- Enable to use a pentagonal shape to scale gathered texels.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "shaderFocus",
                            "description": "- Disable if you compute your own focalDepth (in metres!).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "noise",
                            "description": "- Disable if you don't want noise patterns for dithering.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "CombineMaterial": {
            "name": "CombineMaterial",
            "shortname": "CombineMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\combine\\index.js",
            "line": 6,
            "description": "A material for combining two textures.\n\nThis material supports the two blend modes Add and Screen.\n\nIn Screen mode, the two textures are effectively projected on a white screen\nsimultaneously. In Add mode, the textures are simply added together which\noften produces washed out results.",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "screenMode",
                    "description": "- Whether the screen blend mode should be used.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ]
        },
        "ConvolutionMaterial": {
            "name": "ConvolutionMaterial",
            "shortname": "ConvolutionMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\convolution\\index.js",
            "line": 6,
            "description": "An optimised convolution shader material.\n\nBased on the GDC2003 Presentation by Masaki Kawase, Bunkasha Games:\n Frame Buffer Postprocessing Effects in DOUBLE-S.T.E.A.L (Wreckless)\nand an article by Filip Strugar, Intel:\n An investigation of fast real-time GPU-based image blur algorithms\n\nFurther modified according to:\n https://developer.apple.com/library/ios/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/BestPracticesforShaders/BestPracticesforShaders.html#//apple_ref/doc/uid/TP40008793-CH7-SW15",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texelSize",
                    "description": "- The absolute screen texel size.",
                    "type": "Vector2",
                    "optional": true
                }
            ]
        },
        "KernelSize": {
            "name": "KernelSize",
            "shortname": "KernelSize",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "submodule": "materials",
            "namespace": "",
            "file": "src\\materials\\convolution\\index.js",
            "line": 107,
            "description": "A kernel size enumeration.",
            "static": 1
        },
        "CopyMaterial": {
            "name": "CopyMaterial",
            "shortname": "CopyMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\copy\\index.js",
            "line": 6,
            "description": "A simple copy shader material.",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1
        },
        "DepthMaterial": {
            "name": "DepthMaterial",
            "shortname": "DepthMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\depth\\index.js",
            "line": 6,
            "description": "A depth shader material.",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "camera",
                    "description": "- A camera.",
                    "type": "PerspectiveCamera",
                    "optional": true
                }
            ]
        },
        "DotScreenMaterial": {
            "name": "DotScreenMaterial",
            "shortname": "DotScreenMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\dot-screen\\index.js",
            "line": 6,
            "description": "A dot screen shader material.",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "average",
                    "description": "- Whether the shader should output the colour average (black and white).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ]
        },
        "FilmMaterial": {
            "name": "FilmMaterial",
            "shortname": "FilmMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\film\\index.js",
            "line": 6,
            "description": "A cinematic shader that provides the following effects:\n - Film Grain\n - Scanlines\n - Vignette\n - Greyscale\n - Sepia\n\nOriginal scanlines algorithm by Pat \"Hawthorne\" Shearon.\n http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n\nOptimized scanlines and noise with intensity scaling by Georg \"Leviathan\"\nSteinrohder. (This version is provided under a Creative Commons Attribution\n3.0 License: http://creativecommons.org/licenses/by/3.0)\n\nThe sepia effect is based on:\n https://github.com/evanw/glfx.js\n\nThe vignette code is based on PaintEffect postprocess from ro.me:\n http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "greyscale",
                            "description": "- Enable greyscale effect. Greyscale and sepia are mutually exclusive.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "sepia",
                            "description": "- Enable sepia effect. Greyscale and sepia are mutually exclusive.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "vignette",
                            "description": "- Apply vignette effect.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "eskil",
                            "description": "- Use Eskil's vignette approach. The default looks dusty while Eskil looks burned out.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "scanlines",
                            "description": "- Show scanlines.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "noise",
                            "description": "- Show noise-based film grain.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "noiseIntensity",
                            "description": "- The noise intensity. 0.0 to 1.0.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "scanlineIntensity",
                            "description": "- The scanline intensity. 0.0 to 1.0.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.05"
                        },
                        {
                            "name": "greyscaleIntensity",
                            "description": "- The intensity of the greyscale effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "sepiaIntensity",
                            "description": "- The intensity of the sepia effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "vignetteOffset",
                            "description": "- The offset of the vignette effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "vignetteDarkness",
                            "description": "- The darkness of the vignette effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        }
                    ]
                }
            ]
        },
        "GlitchMaterial": {
            "name": "GlitchMaterial",
            "shortname": "GlitchMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\glitch\\index.js",
            "line": 6,
            "description": "A glitch shader material.\n\nReference:\n https://github.com/staffantan/unityglitch",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1
        },
        "GodRaysMaterial": {
            "name": "GodRaysMaterial",
            "shortname": "GodRaysMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\god-rays\\index.js",
            "line": 6,
            "description": "A crepuscular rays shader material.\n\nReferences:\n\nThibaut Despoulain, 2012:\n (WebGL) Volumetric Light Approximation in Three.js\n http://bkcore.com/blog/3d/webgl-three-js-volumetric-light-godrays.html\n\nNvidia, GPU Gems 3, 2008:\n Chapter 13. Volumetric Light Scattering as a Post-Process\n http://http.developer.nvidia.com/GPUGems3/gpugems3_ch13.html",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1
        },
        "LuminosityMaterial": {
            "name": "LuminosityMaterial",
            "shortname": "LuminosityMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\luminosity\\index.js",
            "line": 6,
            "description": "A luminance shader material.\n\nThis shader produces a greyscale luminance map. It can also be configured to\noutput colors that are scaled with their respective luminance value.\nAdditionally, a range may be provided to mask out undesired texels.\n\nThe alpha channel will remain unaffected in all cases.\n\nLuminance range reference:\n https://cycling74.com/2007/05/23/your-first-shader/#.Vty9FfkrL4Z",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "color",
                    "description": "- Defines whether the shader should output colours scaled with their luminance value.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "range",
                    "description": "- If provided, the shader will mask out texels that aren't in the specified range.",
                    "type": "Vector2",
                    "optional": true
                }
            ]
        },
        "SMAABlendMaterial": {
            "name": "SMAABlendMaterial",
            "shortname": "SMAABlendMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\smaa-blend\\index.js",
            "line": 6,
            "description": "Subpixel Morphological Antialiasing.\n\nThis material is used to render the final antialiasing.",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texelSize",
                    "description": "- The absolute screen texel size.",
                    "type": "Vector2",
                    "optional": true
                }
            ]
        },
        "SMAAColorEdgesMaterial": {
            "name": "SMAAColorEdgesMaterial",
            "shortname": "SMAAColorEdgesMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\smaa-color-edges\\index.js",
            "line": 6,
            "description": "Subpixel Morphological Antialiasing.\n\nThis material detects edges in a color texture.",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texelSize",
                    "description": "- The absolute screen texel size.",
                    "type": "Vector2",
                    "optional": true
                }
            ]
        },
        "SMAAWeightsMaterial": {
            "name": "SMAAWeightsMaterial",
            "shortname": "SMAAWeightsMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\smaa-weights\\index.js",
            "line": 9,
            "description": "Subpixel Morphological Antialiasing.\n\nThis material computes weights for detected edges.",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texelSize",
                    "description": "- The absolute screen texel size.",
                    "type": "Vector2",
                    "optional": true
                }
            ]
        },
        "ToneMappingMaterial": {
            "name": "ToneMappingMaterial",
            "shortname": "ToneMappingMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\materials\\tone-mapping\\index.js",
            "line": 6,
            "description": "Full-screen tone-mapping shader material.\n\nReference:\n http://www.graphics.cornell.edu/~jaf/publications/sig02_paper.pdf",
            "submodule": "materials",
            "extends": "ShaderMaterial",
            "is_constructor": 1
        },
        "BloomPass": {
            "name": "BloomPass",
            "shortname": "BloomPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\bloom.js",
            "line": 6,
            "description": "A bloom pass.\n\nThis pass renders a scene with superimposed blur by utilising the fast Kawase\nconvolution approach.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "resolutionScale",
                            "description": "- The render texture resolution scale, relative to the screen render size.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "kernelSize",
                            "description": "- The blur kernel size.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "KernelSize.LARGE"
                        },
                        {
                            "name": "intensity",
                            "description": "- The strength of the bloom effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "distinction",
                            "description": "- The luminance distinction factor. Raise this value to bring out the brighter elements in the scene.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "screenMode",
                            "description": "- Whether the screen blend mode should be used for combining the bloom texture with the scene colors.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "BlurPass": {
            "name": "BlurPass",
            "shortname": "BlurPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\blur.js",
            "line": 5,
            "description": "A blur pass.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "resolutionScale",
                            "description": "- The render texture resolution scale, relative to the screen render size.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "kernelSize",
                            "description": "- The blur kernel size.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "ConvolutionMaterial.KernelSize.LARGE"
                        }
                    ]
                }
            ]
        },
        "BokehPass": {
            "name": "BokehPass",
            "shortname": "BokehPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\bokeh.js",
            "line": 4,
            "description": "A Depth of Field (DoF) pass using a bokeh shader.\n\nThis pass requires a\n{{#crossLink \"EffectComposer/depthTexture:property\"}}{{/crossLink}}.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "camera",
                    "description": "- The main camera. Used to obtain the aspect ratio and the near and far plane settings.",
                    "type": "PerspectiveCamera"
                },
                {
                    "name": "options",
                    "description": "- Additional parameters.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "focus",
                            "description": "- Focus distance.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "aperture",
                            "description": "- Camera aperture scale. Bigger values for shallower depth of field.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.025"
                        },
                        {
                            "name": "maxBlur",
                            "description": "- Maximum blur strength.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        }
                    ]
                }
            ]
        },
        "Bokeh2Pass": {
            "name": "Bokeh2Pass",
            "shortname": "Bokeh2Pass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\bokeh2.js",
            "line": 4,
            "description": "An advanced Depth of Field (DoF) pass.\n\nYields more realistic results but is also more demanding.\n\nThis pass requires a\n{{#crossLink \"EffectComposer/depthTexture:property\"}}{{/crossLink}}.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "camera",
                    "description": "- The main camera. Used to obtain the focal length and the near and far plane settings.",
                    "type": "PerspectiveCamera"
                },
                {
                    "name": "options",
                    "description": "- Additional parameters.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "rings",
                            "description": "- The amount of blur rings.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "samples",
                            "description": "- The amount of samples per ring.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "4"
                        },
                        {
                            "name": "showFocus",
                            "description": "- Whether the focus point should be highlighted.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "manualDoF",
                            "description": "- Enables manual depth of field blur.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "vignette",
                            "description": "- Enables a vignette effect.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "pentagon",
                            "description": "- Enable to use a pentagonal shape to scale gathered texels.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "shaderFocus",
                            "description": "- Disable if you compute your own focalDepth (in metres!).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "noise",
                            "description": "- Disable if you don't want noise patterns for dithering.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "ClearMaskPass": {
            "name": "ClearMaskPass",
            "shortname": "ClearMaskPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\clear-mask.js",
            "line": 3,
            "description": "A clear mask pass.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1
        },
        "DepthPass": {
            "name": "DepthPass",
            "shortname": "DepthPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\depth.js",
            "line": 4,
            "description": "A depth pass.\n\nReads the depth from a depth texture and renders it.\n\nThis pass requires a\n{{#crossLink \"EffectComposer/depthTexture:property\"}}{{/crossLink}}.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "camera",
                    "description": "- The main camera. Used to obtain the near and far plane settings.",
                    "type": "PerspectiveCamera"
                }
            ]
        },
        "DotScreenPass": {
            "name": "DotScreenPass",
            "shortname": "DotScreenPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\dot-screen.js",
            "line": 4,
            "description": "A dot screen pass.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "angle",
                            "description": "- The angle of the pattern.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.57"
                        },
                        {
                            "name": "scale",
                            "description": "- The scale of the overall effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "intensity",
                            "description": "- The intensity of the effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "average",
                            "description": "- Whether the shader should output a colour average (black and white).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "FilmPass": {
            "name": "FilmPass",
            "shortname": "FilmPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\film.js",
            "line": 4,
            "description": "A film pass providing various cinematic effects.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "greyscale",
                            "description": "- Enable greyscale effect. Greyscale and sepia are mutually exclusive.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "sepia",
                            "description": "- Enable sepia effect. Greyscale and sepia are mutually exclusive.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "vignette",
                            "description": "- Apply vignette effect.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "eskil",
                            "description": "- Use Eskil's vignette approach. The default looks dusty while Eskil looks more burned out.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "scanlines",
                            "description": "- Show scanlines.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "noise",
                            "description": "- Show noise-based film grain.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "noiseIntensity",
                            "description": "- The noise intensity. 0.0 to 1.0.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "scanlineIntensity",
                            "description": "- The scanline intensity. 0.0 to 1.0.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.05"
                        },
                        {
                            "name": "scanlineDensity",
                            "description": "- The number of scanlines in percent, relative to the screen height.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "greyscaleIntensity",
                            "description": "- The intensity of the greyscale effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "sepiaIntensity",
                            "description": "- The intensity of the sepia effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "vignetteOffset",
                            "description": "- The offset of the vignette effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "vignetteDarkness",
                            "description": "- The darkness of the vignette effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        }
                    ]
                }
            ]
        },
        "GlitchPass": {
            "name": "GlitchPass",
            "shortname": "GlitchPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\glitch.js",
            "line": 39,
            "description": "A glitch pass.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "perturbMap",
                            "description": "- A perturbation map. If none is provided, a noise texture will be created.",
                            "type": "Texture",
                            "optional": true
                        },
                        {
                            "name": "dtSize",
                            "description": "- The size of the generated noise map. Will be ignored if a perturbation map is provided.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "64"
                        }
                    ]
                }
            ]
        },
        "GlitchMode": {
            "name": "GlitchMode",
            "shortname": "GlitchMode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "submodule": "passes",
            "namespace": "",
            "file": "src\\passes\\glitch.js",
            "line": 241,
            "description": "A glitch mode enumeration.",
            "static": 1
        },
        "GodRaysPass": {
            "name": "GodRaysPass",
            "shortname": "GodRaysPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\god-rays.js",
            "line": 35,
            "description": "A crepuscular rays pass.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "- The main scene.",
                    "type": "Scene"
                },
                {
                    "name": "camera",
                    "description": "- The main camera.",
                    "type": "Camera"
                },
                {
                    "name": "lightSource",
                    "description": "- The main light source.",
                    "type": "Object3D"
                },
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "density",
                            "description": "- The density of the light rays.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.96"
                        },
                        {
                            "name": "decay",
                            "description": "- An illumination decay factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.93"
                        },
                        {
                            "name": "weight",
                            "description": "- A light ray weight factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.4"
                        },
                        {
                            "name": "exposure",
                            "description": "- A constant attenuation coefficient.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.6"
                        },
                        {
                            "name": "clampMax",
                            "description": "- An upper bound for the saturation of the overall effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "intensity",
                            "description": "- A constant factor for additive blending.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "resolutionScale",
                            "description": "- The render texture resolution scale, relative to the screen render size.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.5"
                        },
                        {
                            "name": "kernelSize",
                            "description": "- The blur kernel size.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "KernelSize.LARGE"
                        },
                        {
                            "name": "samples",
                            "description": "- The number of samples per pixel.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "60"
                        },
                        {
                            "name": "screenMode",
                            "description": "- Whether the screen blend mode should be used for combining the god rays texture with the scene colors.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "MaskPass": {
            "name": "MaskPass",
            "shortname": "MaskPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\mask.js",
            "line": 3,
            "description": "A mask pass.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "- The scene to render.",
                    "type": "Scene"
                },
                {
                    "name": "camera",
                    "description": "- The camera to use to render the scene.",
                    "type": "Camera"
                }
            ]
        },
        "Pass": {
            "name": "Pass",
            "shortname": "Pass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\pass.js",
            "line": 3,
            "description": "An abstract pass.\n\nPasses that do not rely on the depth buffer should explicitly disable the\ndepth test and depth write in their respective shader materials.\n\nThis class implements a dispose method that frees memory on demand. The\nEffectComposer calls this method when it is being destroyed. For this\nmechanism to work properly, please assign your render targets, materials and\ntextures directly to your pass. You can prevent your disposable objects from\nbeing deleted by keeping them inside deeper structures.",
            "submodule": "passes",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "- The scene to render.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "camera",
                    "description": "- The camera will be added to the given scene if it has no parent.",
                    "type": "Camera",
                    "optional": true
                },
                {
                    "name": "quad",
                    "description": "- A quad that fills the screen to render 2D filter effects. Set this to null, if you don't need it (see {{#crossLink \"RenderPass\"}}{{/crossLink}}).",
                    "type": "Mesh",
                    "optional": true
                }
            ]
        },
        "RenderPass": {
            "name": "RenderPass",
            "shortname": "RenderPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\render.js",
            "line": 15,
            "description": "A pass that renders a given scene directly on screen or into the read buffer\nfor further processing.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "- The scene to render.",
                    "type": "Scene"
                },
                {
                    "name": "camera",
                    "description": "- The camera to use to render the scene.",
                    "type": "Camera"
                },
                {
                    "name": "options",
                    "description": "- Additional options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "overrideMaterial",
                            "description": "- An override material for the scene.",
                            "type": "Material",
                            "optional": true
                        },
                        {
                            "name": "clearColor",
                            "description": "- An override clear color.",
                            "type": "Color",
                            "optional": true
                        },
                        {
                            "name": "clearAlpha",
                            "description": "- An override clear alpha.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "SavePass": {
            "name": "SavePass",
            "shortname": "SavePass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\save.js",
            "line": 5,
            "description": "A pass that renders the result from a previous pass to another render target.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "renderTarget",
                    "description": "- The render target to use for saving the read buffer.",
                    "type": "WebGLRenderTarget",
                    "optional": true
                },
                {
                    "name": "resize",
                    "description": "- Whether the render target should adjust to the size of the read/write buffer.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ]
        },
        "ShaderPass": {
            "name": "ShaderPass",
            "shortname": "ShaderPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\shader.js",
            "line": 3,
            "description": "A shader pass.\n\nUsed to render any shader material as a 2D filter.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "material",
                    "description": "- The shader material to use.",
                    "type": "ShaderMaterial"
                },
                {
                    "name": "textureID",
                    "description": "- The texture uniform identifier.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"tDiffuse\""
                }
            ]
        },
        "SMAAPass": {
            "name": "SMAAPass",
            "shortname": "SMAAPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\smaa.js",
            "line": 5,
            "description": "Subpixel Morphological Antialiasing (SMAA) v2.8.\n\nPreset: SMAA 1x Medium (with color edge detection).\n https://github.com/iryoku/smaa/releases/tag/v2.8",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "Image",
                    "description": "- This pass requires an Image class to create internal textures. Provide window.Image in a browser environment.",
                    "type": "Image"
                }
            ]
        },
        "TexturePass": {
            "name": "TexturePass",
            "shortname": "TexturePass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\texture.js",
            "line": 5,
            "description": "A texture pass.\n\nRenders a given texture.",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "- The texture.",
                    "type": "Texture"
                },
                {
                    "name": "opacity",
                    "description": "- The texture opacity.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1.0"
                }
            ]
        },
        "ToneMappingPass": {
            "name": "ToneMappingPass",
            "shortname": "ToneMappingPass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "postprocessing",
            "namespace": "",
            "file": "src\\passes\\tone-mapping.js",
            "line": 17,
            "description": "A tone mapping pass that supports adaptive luminosity.\n\nIf adaptivity is enabled, this pass generates a texture that represents the\nluminosity of the current scene and adjusts it over time to simulate the\noptic nerve responding to the amount of light it is receiving.\n\nReference:\n GDC2007 - Wolfgang Engel, Post-Processing Pipeline\n http://perso.univ-lyon1.fr/jean-claude.iehl/Public/educ/GAMA/2007/gdc07/Post-Processing_Pipeline.pdf",
            "submodule": "passes",
            "extends": "Pass",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "- The options.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "adaptive",
                            "description": "- Whether the tone mapping should use an adaptive luminance map.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "resolution",
                            "description": "- The render texture resolution.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "256"
                        },
                        {
                            "name": "distinction",
                            "description": "- A luminance distinction factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        }
                    ]
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src\\core\\effect-composer.js",
            "line": 29,
            "description": "The renderer.\n\nYou may replace the renderer at any time by using the\n{{#crossLink \"EffectComposer/replaceRenderer:method\"}}{{/crossLink}}\nmethod.",
            "itemtype": "property",
            "name": "renderer",
            "type": "WebGLRenderer",
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 42,
            "description": "The read buffer.\n\nReading from and writing to the same render target should be avoided.\nTherefore, two seperate yet identical buffers are used.",
            "itemtype": "property",
            "name": "readBuffer",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 55,
            "description": "The write buffer.",
            "itemtype": "property",
            "name": "writeBuffer",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 79,
            "description": "A copy pass used for copying masked scenes.",
            "itemtype": "property",
            "name": "copyPass",
            "type": "ShaderPass",
            "access": "private",
            "tagname": "",
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 89,
            "description": "The passes.",
            "itemtype": "property",
            "name": "passes",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 101,
            "description": "The depth texture of the read and write buffers.\n\nThe read and write buffers share a single depth texture. Depth will be\nwritten to this texture when something is rendered into one of the buffers\nand the involved materials have depth write enabled.\n\nYou may enable this mechanism during the instantiation of the composer or\nby assigning a DepthTexture instance later on. You may also disable it by\nassigning null.",
            "itemtype": "property",
            "name": "depthTexture",
            "type": "DepthTexture",
            "default": "null",
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 126,
            "description": "Replaces the current renderer with the given one. The DOM element of the\ncurrent renderer will automatically be removed from its parent node and the\nDOM element of the new renderer will take its place.\n\nThe auto clear mechanism of the provided renderer will be disabled.\n\nSwitching between renderers allows you to dynamically enable or disable\nantialiasing.",
            "itemtype": "method",
            "name": "replaceRenderer",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The new renderer.",
                    "type": "WebGLRenderer"
                }
            ],
            "return": {
                "description": "The old renderer.",
                "type": "WebGLRenderer"
            },
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 175,
            "description": "Creates a new render target by replicating the renderer's canvas.\n\nThe created render target uses a linear filter for texel minification and\nmagnification. Its render texture format depends on whether the renderer\nuses the alpha channel. Mipmaps are disabled.",
            "itemtype": "method",
            "name": "createBuffer",
            "params": [
                {
                    "name": "depthBuffer",
                    "description": "- Whether the render target should have a depth buffer.",
                    "type": "Boolean"
                },
                {
                    "name": "stencilBuffer",
                    "description": "- Whether the render target should have a stencil buffer.",
                    "type": "Boolean"
                },
                {
                    "name": "depthTexture",
                    "description": "- Whether the render target should have a depth texture.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "A new render target that equals the renderer's canvas.",
                "type": "WebGLRenderTarget"
            },
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 215,
            "description": "Adds a pass, optionally at a specific index.",
            "itemtype": "method",
            "name": "addPass",
            "params": [
                {
                    "name": "pass",
                    "description": "- A new pass.",
                    "type": "Pass"
                },
                {
                    "name": "index",
                    "description": "- An index at which the pass should be inserted.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 244,
            "description": "Removes a pass.",
            "itemtype": "method",
            "name": "removePass",
            "params": [
                {
                    "name": "pass",
                    "description": "- The pass.",
                    "type": "Pass"
                }
            ],
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 257,
            "description": "Renders all enabled passes in the order in which they were added.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "delta",
                    "description": "- The time between the last frame and the current one in seconds.",
                    "type": "Number"
                }
            ],
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 319,
            "description": "Sets the size of the buffers and the renderer's output canvas.\n\nEvery pass will be informed of the new size. It's up to each pass how that\ninformation is used.\n\nIf no width or height is specified, the render targets and passes will be\nupdated with the current size of the renderer.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 364,
            "description": "Resets this composer by deleting all passes and creating new buffers.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "renderTarget",
                    "description": "- A new render target. If none is provided, the settings of the renderer will be used.",
                    "type": "WebGLRenderTarget",
                    "optional": true
                }
            ],
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\core\\effect-composer.js",
            "line": 384,
            "description": "Destroys all passes and render targets.\n\nThis method deallocates all render targets, textures and materials created\nby the passes. It also deletes this composer's frame buffers.",
            "itemtype": "method",
            "name": "dispose",
            "params": [
                {
                    "name": "renderTarget",
                    "description": "- A new render target. If none is provided, the composer will become inoperative.",
                    "type": "WebGLRenderTarget",
                    "optional": true
                }
            ],
            "class": "EffectComposer",
            "submodule": "core"
        },
        {
            "file": "src\\materials\\bokeh\\index.js",
            "line": 58,
            "description": "Adopts the settings of the given camera.",
            "itemtype": "method",
            "name": "adoptCameraSettings",
            "params": [
                {
                    "name": "camera",
                    "description": "- A camera.",
                    "type": "PerspectiveCamera"
                }
            ],
            "class": "BokehMaterial",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\bokeh2\\index.js",
            "line": 100,
            "description": "Sets the texel size.",
            "itemtype": "method",
            "name": "setTexelSize",
            "params": [
                {
                    "name": "x",
                    "description": "- The texel width.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The texel height.",
                    "type": "Number"
                }
            ],
            "class": "Bokeh2Material",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\bokeh2\\index.js",
            "line": 115,
            "description": "Adopts the near and far plane and the focal length of the given camera.",
            "itemtype": "method",
            "name": "adoptCameraSettings",
            "params": [
                {
                    "name": "camera",
                    "description": "- The main camera.",
                    "type": "PerspectiveCamera"
                }
            ],
            "class": "Bokeh2Material",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 51,
            "description": "The current kernel size.",
            "itemtype": "property",
            "name": "kernelSize",
            "type": "KernelSize",
            "default": "KernelSize.LARGE",
            "class": "ConvolutionMaterial",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 63,
            "description": "Returns the kernel.",
            "itemtype": "method",
            "name": "getKernel",
            "return": {
                "description": "The kernel.",
                "type": "Float32Array"
            },
            "class": "ConvolutionMaterial",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 72,
            "description": "Sets the texel size.",
            "itemtype": "method",
            "name": "setTexelSize",
            "params": [
                {
                    "name": "x",
                    "description": "- The texel width.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The texel height.",
                    "type": "Number"
                }
            ],
            "class": "ConvolutionMaterial",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 89,
            "description": "The Kawase blur kernel presets.",
            "itemtype": "property",
            "name": "kernelPresets",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ConvolutionMaterial",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 117,
            "description": "A very small kernel that matches a 7x7 Gauss blur kernel.",
            "itemtype": "property",
            "name": "VERY_SMALL",
            "type": "Number",
            "static": 1,
            "class": "KernelSize",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 127,
            "description": "A small kernel that matches a 15x15 Gauss blur kernel.",
            "itemtype": "property",
            "name": "SMALL",
            "type": "Number",
            "static": 1,
            "class": "KernelSize",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 137,
            "description": "A medium sized kernel that matches a 23x23 Gauss blur kernel.",
            "itemtype": "property",
            "name": "MEDIUM",
            "type": "Number",
            "static": 1,
            "class": "KernelSize",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 147,
            "description": "A large kernel that matches a 35x35 Gauss blur kernel.",
            "itemtype": "property",
            "name": "LARGE",
            "type": "Number",
            "static": 1,
            "class": "KernelSize",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 157,
            "description": "A very large kernel that matches a 63x63 Gauss blur kernel.",
            "itemtype": "property",
            "name": "VERY_LARGE",
            "type": "Number",
            "static": 1,
            "class": "KernelSize",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\convolution\\index.js",
            "line": 167,
            "description": "A huge kernel that matches a 127x127 Gauss blur kernel.",
            "itemtype": "property",
            "name": "HUGE",
            "type": "Number",
            "static": 1,
            "class": "KernelSize",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\depth\\index.js",
            "line": 45,
            "description": "Adopts the settings of the given camera.",
            "itemtype": "method",
            "name": "adoptCameraSettings",
            "params": [
                {
                    "name": "camera",
                    "description": "- A camera.",
                    "type": "PerspectiveCamera"
                }
            ],
            "class": "DepthMaterial",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\smaa-weights\\index.js",
            "line": 58,
            "description": "The area pattern recognition image.",
            "itemtype": "property",
            "name": "areaImage",
            "type": "String",
            "class": "SMAAWeightsMaterial",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\materials\\smaa-weights\\index.js",
            "line": 67,
            "description": "The search image.",
            "itemtype": "property",
            "name": "searchImage",
            "type": "String",
            "class": "SMAAWeightsMaterial",
            "module": "postprocessing",
            "submodule": "materials"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 30,
            "description": "A blur pass.",
            "itemtype": "property",
            "name": "blurPass",
            "type": "BlurPass",
            "access": "private",
            "tagname": "",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 40,
            "description": "A render target.",
            "itemtype": "property",
            "name": "renderTargetX",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 50,
            "description": "A second render target.",
            "itemtype": "property",
            "name": "renderTargetY",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 60,
            "description": "Combine shader material.",
            "itemtype": "property",
            "name": "combineMaterial",
            "type": "CombineMaterial",
            "access": "private",
            "tagname": "",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 72,
            "description": "Luminance shader material.",
            "itemtype": "property",
            "name": "luminosityMaterial",
            "type": "LuminosityMaterial",
            "access": "private",
            "tagname": "",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 86,
            "description": "The resolution scale.\n\nYou need to call\n{{#crossLink \"EffectComposer/setSize:method\"}}{{/crossLink}} after changing\nthis value.",
            "itemtype": "property",
            "name": "resolutionScale",
            "type": "Number",
            "default": "0.5",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 106,
            "description": "The blur kernel size.",
            "itemtype": "property",
            "name": "kernelSize",
            "type": "KernelSize",
            "default": "KernelSize.LARGE",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 122,
            "description": "The overall intensity of the effect.",
            "itemtype": "property",
            "name": "intensity",
            "type": "Number",
            "default": "1.0",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 142,
            "description": "The luminance distinction factor.",
            "itemtype": "property",
            "name": "distinction",
            "type": "Number",
            "default": "1.0",
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 162,
            "description": "Renders the effect.\n\nExtracts a luminance map from the read buffer, blurs it and combines it\nwith the read buffer.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 204,
            "description": "Adjusts the format of the render targets.",
            "itemtype": "method",
            "name": "initialise",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "alpha",
                    "description": "- Whether the renderer uses the alpha channel or not.",
                    "type": "Boolean"
                }
            ],
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bloom.js",
            "line": 225,
            "description": "Updates this pass with the renderer's size.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "BloomPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\blur.js",
            "line": 25,
            "description": "A render target.",
            "itemtype": "property",
            "name": "renderTargetX",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "BlurPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\blur.js",
            "line": 41,
            "description": "A second render target.",
            "itemtype": "property",
            "name": "renderTargetY",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "BlurPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\blur.js",
            "line": 51,
            "description": "The resolution scale.\n\nYou need to call\n{{#crossLink \"EffectComposer/setSize:method\"}}{{/crossLink}} after changing\nthis value.",
            "itemtype": "property",
            "name": "resolutionScale",
            "type": "Number",
            "default": "0.5",
            "class": "BlurPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\blur.js",
            "line": 65,
            "description": "A convolution shader material.",
            "itemtype": "property",
            "name": "convolutionMaterial",
            "type": "ConvolutionMaterial",
            "access": "private",
            "tagname": "",
            "class": "BlurPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\blur.js",
            "line": 81,
            "description": "The kernel size.",
            "itemtype": "property",
            "name": "kernelSize",
            "type": "KernelSize",
            "default": "KernelSize.LARGE",
            "class": "BlurPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\blur.js",
            "line": 101,
            "description": "Blurs the read buffer.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "BlurPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\blur.js",
            "line": 146,
            "description": "Adjusts the format of the render targets.",
            "itemtype": "method",
            "name": "initialise",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "alpha",
                    "description": "- Whether the renderer uses the alpha channel or not.",
                    "type": "Boolean"
                }
            ],
            "class": "BlurPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\blur.js",
            "line": 165,
            "description": "Updates this pass with the renderer's size.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "BlurPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bokeh.js",
            "line": 29,
            "description": "Bokeh shader material.",
            "itemtype": "property",
            "name": "bokehMaterial",
            "type": "BokehMaterial",
            "access": "private",
            "tagname": "",
            "class": "BokehPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bokeh.js",
            "line": 43,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "BokehPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bokeh.js",
            "line": 61,
            "description": "Updates this pass with the renderer's size.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "BokehPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bokeh2.js",
            "line": 34,
            "description": "Bokeh shader material.",
            "itemtype": "property",
            "name": "bokehMaterial",
            "type": "BokehMaterial",
            "access": "private",
            "tagname": "",
            "class": "Bokeh2Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bokeh2.js",
            "line": 48,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "Bokeh2Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\bokeh2.js",
            "line": 66,
            "description": "Updates this pass with the renderer's size.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "Bokeh2Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\clear-mask.js",
            "line": 20,
            "description": "This pass disables the stencil test.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                }
            ],
            "class": "ClearMaskPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\depth.js",
            "line": 25,
            "description": "A depth shader material.",
            "itemtype": "property",
            "name": "depthMaterial",
            "type": "DepthMaterial",
            "access": "private",
            "tagname": "",
            "class": "DepthPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\depth.js",
            "line": 39,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "DepthPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\dot-screen.js",
            "line": 26,
            "description": "A dot screen shader material.",
            "itemtype": "property",
            "name": "material",
            "type": "DotScreenMaterial",
            "access": "private",
            "tagname": "",
            "class": "DotScreenPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\dot-screen.js",
            "line": 44,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "DotScreenPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\dot-screen.js",
            "line": 61,
            "description": "Updates this pass with the renderer's size.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "heght",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "DotScreenPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\film.js",
            "line": 35,
            "description": "Film shader material.",
            "itemtype": "property",
            "name": "material",
            "type": "FilmMaterial",
            "access": "private",
            "tagname": "",
            "class": "FilmPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\film.js",
            "line": 47,
            "description": "The amount of scanlines in percent, relative to the screen height.\n\nYou need to call\n{{#crossLink \"EffectComposer/setSize:method\"}}{{/crossLink}} after changing\nthis value.",
            "itemtype": "property",
            "name": "scanlineDensity",
            "type": "Number",
            "default": "1.25",
            "class": "FilmPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\film.js",
            "line": 63,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "delta",
                    "description": "- The render delta time.",
                    "type": "Number"
                }
            ],
            "class": "FilmPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\film.js",
            "line": 82,
            "description": "Adjusts the scanline count using the renderer's height.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "FilmPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 5,
            "description": "Returns a random integer in the specified range.",
            "itemtype": "method",
            "name": "randomInt",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "low",
                    "description": "- The lowest possible value.",
                    "type": "Number"
                },
                {
                    "name": "high",
                    "description": "- The highest possible value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The random value.",
                "type": "Number"
            },
            "class": "GlitchPass",
            "module": "postprocessing"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 22,
            "description": "Returns a random float in the specified range.",
            "itemtype": "method",
            "name": "randomFloat",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "low",
                    "description": "- The lowest possible value.",
                    "type": "Number"
                },
                {
                    "name": "high",
                    "description": "- The highest possible value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The random value.",
                "type": "Number"
            },
            "class": "GlitchPass",
            "module": "postprocessing"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 59,
            "description": "Glitch shader material.",
            "itemtype": "property",
            "name": "material",
            "type": "GlitchMaterial",
            "access": "private",
            "tagname": "",
            "class": "GlitchPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 71,
            "description": "A perturbation map.",
            "itemtype": "property",
            "name": "texture",
            "type": "Texture",
            "access": "private",
            "tagname": "",
            "class": "GlitchPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 92,
            "description": "The effect mode.",
            "itemtype": "property",
            "name": "mode",
            "type": "GlitchMode",
            "default": "GlitchMode.SPORADIC",
            "class": "GlitchPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 102,
            "description": "Counter for glitch activation and deactivation.",
            "itemtype": "property",
            "name": "counter",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "GlitchPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 112,
            "description": "A random break point for the sporadic glitch activation.",
            "itemtype": "property",
            "name": "breakPoint",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "GlitchPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 124,
            "description": "A perturbation map.",
            "itemtype": "property",
            "name": "perturbMap",
            "type": "Texture",
            "class": "GlitchPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 140,
            "description": "Deletes the current perturbation map and creates a new one.",
            "itemtype": "method",
            "name": "generatePerturbMap",
            "params": [
                {
                    "name": "size",
                    "description": "- The texture size.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "64"
                }
            ],
            "return": {
                "description": "The perturbation texture.",
                "type": "DataTexture"
            },
            "class": "GlitchPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 181,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "GlitchPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 251,
            "description": "Sporadic glitches.",
            "itemtype": "property",
            "name": "SPORADIC",
            "type": "Number",
            "static": 1,
            "class": "GlitchMode",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 261,
            "description": "Constant mild glitches.",
            "itemtype": "property",
            "name": "CONSTANT_MILD",
            "type": "Number",
            "static": 1,
            "class": "GlitchMode",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\glitch.js",
            "line": 271,
            "description": "Constant wild glitches.",
            "itemtype": "property",
            "name": "CONSTANT_WILD",
            "type": "Number",
            "static": 1,
            "class": "GlitchMode",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 6,
            "description": "Clamps a given value.",
            "itemtype": "method",
            "name": "clamp",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "- The value to clamp.",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "- The lowest possible value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "- The highest possible value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The clamped value.",
                "type": "Number"
            },
            "class": "GodRaysPass",
            "module": "postprocessing"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 24,
            "description": "A clear color.",
            "itemtype": "property",
            "name": "CLEAR_COLOR",
            "type": "Color",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "GodRaysPass",
            "module": "postprocessing"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 64,
            "description": "A blur pass.",
            "itemtype": "property",
            "name": "blurPass",
            "type": "BlurPass",
            "access": "private",
            "tagname": "",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 74,
            "description": "A render target.",
            "itemtype": "property",
            "name": "renderTargetX",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 84,
            "description": "A second render target.",
            "itemtype": "property",
            "name": "renderTargetY",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 94,
            "description": "A render target for rendering the masked scene.",
            "itemtype": "property",
            "name": "renderTargetMask",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 108,
            "description": "The light source.",
            "itemtype": "property",
            "name": "lightSource",
            "type": "Object3D",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 117,
            "description": "The light position in screen space.",
            "itemtype": "property",
            "name": "screenPosition",
            "type": "Vector3",
            "access": "private",
            "tagname": "",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 127,
            "description": "A combine shader material used for rendering to screen.",
            "itemtype": "property",
            "name": "combineMaterial",
            "type": "CombineMaterial",
            "access": "private",
            "tagname": "",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 137,
            "description": "A material used for masking the scene objects.",
            "itemtype": "property",
            "name": "maskMaterial",
            "type": "MeshBasicMaterial",
            "access": "private",
            "tagname": "",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 147,
            "description": "God rays shader material.",
            "itemtype": "property",
            "name": "godRaysMaterial",
            "type": "GodRaysMaterial",
            "access": "private",
            "tagname": "",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 167,
            "description": "A scene that only contains the light source.",
            "itemtype": "property",
            "name": "lightScene",
            "type": "Scene",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 176,
            "description": "The main scene.",
            "itemtype": "property",
            "name": "mainScene",
            "type": "Scene",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 185,
            "description": "The main camera.",
            "itemtype": "property",
            "name": "mainCamera",
            "type": "Camera",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 196,
            "description": "The resolution scale.\n\nYou need to call\n{{#crossLink \"EffectComposer/setSize:method\"}}{{/crossLink}} after changing\nthis value.",
            "itemtype": "property",
            "name": "kernelSize",
            "type": "Number",
            "default": "0.5",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 216,
            "description": "The blur kernel size.",
            "itemtype": "property",
            "name": "kernelSize",
            "type": "KernelSize",
            "default": "KernelSize.LARGE",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 232,
            "description": "The overall intensity of the effect.",
            "itemtype": "property",
            "name": "intensity",
            "type": "Number",
            "default": "1.0",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 252,
            "description": "The number of samples per pixel.\n\nThis value must be carefully chosen. A higher value increases the GPU load.",
            "itemtype": "property",
            "name": "samples",
            "type": "Number",
            "default": "60",
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 278,
            "description": "Renders the scene.\n\nThe god rays pass has four phases:\n\nMask Phase:\n The scene is rendered using a mask material.\n\nPreliminary Blur Phase:\n The masked scene is blurred.\n\nGod Rays Phase:\n The blurred scene is blurred again, but this time along radial lines\n towards the light source.\n\nComposite Phase:\n The final result is combined with the read buffer.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 371,
            "description": "Adjusts the format of the render targets.",
            "itemtype": "method",
            "name": "initialise",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "alpha",
                    "description": "- Whether the renderer uses the alpha channel or not.",
                    "type": "Boolean"
                }
            ],
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\god-rays.js",
            "line": 393,
            "description": "Updates this pass with the renderer's size.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "GodRaysPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\mask.js",
            "line": 20,
            "description": "Inverse flag.",
            "itemtype": "property",
            "name": "inverse",
            "type": "Boolean",
            "default": "false",
            "class": "MaskPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\mask.js",
            "line": 30,
            "description": "Clear flag.",
            "itemtype": "property",
            "name": "clear",
            "type": "Boolean",
            "default": "true",
            "class": "MaskPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\mask.js",
            "line": 42,
            "description": "Renders the scene as a mask by only setting the stencil bits.\nThe buffers will both be cleared first.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "MaskPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 31,
            "description": "The scene to render.",
            "itemtype": "property",
            "name": "scene",
            "type": "Scene",
            "access": "private",
            "tagname": "",
            "default": "Scene()",
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 42,
            "description": "The camera to render with.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "access": "private",
            "tagname": "",
            "default": "OrthographicCamera(-1, 1, 1, -1, 0, 1)",
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 53,
            "description": "The quad mesh to use for rendering.\n\nAssign your shader material to this mesh!",
            "itemtype": "property",
            "name": "quad",
            "type": "Mesh",
            "access": "private",
            "tagname": "",
            "default": "Mesh(PlaneBufferGeometry(2, 2), null)",
            "example": [
                "\n    this.quad.material = this.myMaterial;"
            ],
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 74,
            "description": "Indicates whether the read and write buffers should be swapped after this\npass has finished rendering.\n\nSet this to true if this pass renders to the write buffer so that a\nfollowing pass can find the result in the read buffer.",
            "itemtype": "property",
            "name": "needsSwap",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "default": "false",
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 89,
            "description": "Enabled flag.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "default": "true",
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 99,
            "description": "Render to screen flag.",
            "itemtype": "property",
            "name": "renderToScreen",
            "type": "Boolean",
            "default": "false",
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 128,
            "description": "Renders the effect.\n\nThis is an abstract method that must be overridden.",
            "itemtype": "method",
            "name": "render",
            "throws": {
                "description": "An error is thrown if the method is not overridden.",
                "type": "Error"
            },
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- A read buffer. Contains the result of the previous pass.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- A write buffer. Normally used as the render target when the read buffer is used as input.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "delta",
                    "description": "- The delta time.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "maskActive",
                    "description": "- Indicates whether a stencil test mask is active or not.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 148,
            "description": "Updates this pass with the renderer's size.\n\nThis is an abstract method that may be overriden in case you want to be\ninformed about the main render size.\n\nThe effect composer calls this method before this pass is initialised and\nevery time its own size is updated.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The renderer's width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The renderer's height.",
                    "type": "Number"
                }
            ],
            "example": [
                "\n    this.myRenderTarget.setSize(width, height);"
            ],
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 166,
            "description": "Performs initialisation tasks.\n\nBy implementing this abstract method you gain access to the renderer.\nYou'll also be able to configure your custom render targets to use the\nappropriate format (RGB or RGBA) if appropriate.\n\nThe provided renderer can be used to warm up special off-screen render\ntargets by performing a preliminary render operation.\n\nThe effect composer calls this method when this pass is added to its queue.",
            "itemtype": "method",
            "name": "initialise",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "alpha",
                    "description": "- Whether the renderer uses the alpha channel or not.",
                    "type": "Boolean"
                }
            ],
            "example": [
                "\n    if(!alpha) { this.myRenderTarget.texture.format = RGBFormat; }"
            ],
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\pass.js",
            "line": 187,
            "description": "Performs a shallow search for properties that define a dispose method and\ndeletes them. The pass will be inoperative after this method was called!\n\nDisposable objects:\n - render targets\n - materials\n - textures\n\nThe EffectComposer calls this method automatically when it is being\ndestroyed. You may, however, use it independently to free memory\nwhen you are certain that you don't need this pass anymore.",
            "itemtype": "method",
            "name": "dispose",
            "class": "Pass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\render.js",
            "line": 4,
            "description": "Used for saving the original clear color during rendering.",
            "itemtype": "property",
            "name": "CLEAR_COLOR",
            "type": "Color",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "RenderPass",
            "module": "postprocessing"
        },
        {
            "file": "src\\passes\\render.js",
            "line": 37,
            "description": "Override material.",
            "itemtype": "property",
            "name": "overrideMaterial",
            "type": "Material",
            "class": "RenderPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\render.js",
            "line": 46,
            "description": "Clear color.",
            "itemtype": "property",
            "name": "clearColor",
            "type": "Color",
            "class": "RenderPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\render.js",
            "line": 55,
            "description": "Clear alpha.",
            "itemtype": "property",
            "name": "clearAlpha",
            "type": "Number",
            "default": "1.0",
            "class": "RenderPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\render.js",
            "line": 65,
            "description": "Clear flag.",
            "itemtype": "property",
            "name": "clear",
            "type": "Boolean",
            "default": "true",
            "class": "RenderPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\render.js",
            "line": 77,
            "description": "Renders the scene.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "RenderPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\save.js",
            "line": 22,
            "description": "Copy shader material.",
            "itemtype": "property",
            "name": "material",
            "type": "CopyMaterial",
            "access": "private",
            "tagname": "",
            "class": "SavePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\save.js",
            "line": 34,
            "description": "The render target.",
            "itemtype": "property",
            "name": "renderTarget",
            "type": "WebGLRenderTarget",
            "class": "SavePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\save.js",
            "line": 49,
            "description": "Indicates whether the render target should be resized when the size of\nthe composer's read/write buffer changes.",
            "itemtype": "property",
            "name": "resize",
            "type": "Boolean",
            "default": "true",
            "class": "SavePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\save.js",
            "line": 62,
            "description": "Saves the read buffer.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "SavePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\save.js",
            "line": 78,
            "description": "Adjusts the format of the render target.",
            "itemtype": "method",
            "name": "initialise",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "alpha",
                    "description": "- Whether the renderer uses the alpha channel or not.",
                    "type": "Boolean"
                }
            ],
            "class": "SavePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\save.js",
            "line": 96,
            "description": "Updates this pass with the renderer's size.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "SavePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\shader.js",
            "line": 24,
            "description": "The shader material to use for rendering.",
            "itemtype": "property",
            "name": "material",
            "type": "ShaderMaterial",
            "class": "ShaderPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\shader.js",
            "line": 35,
            "description": "The name of the color sampler uniform of the given material.",
            "itemtype": "property",
            "name": "textureID",
            "type": "String",
            "default": "\"tDiffuse\"",
            "class": "ShaderPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\shader.js",
            "line": 47,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "ShaderPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\smaa.js",
            "line": 26,
            "description": "A render target for the color edge detection.",
            "itemtype": "property",
            "name": "renderTargetColorEdges",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "SMAAPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\smaa.js",
            "line": 42,
            "description": "A render target for the SMAA weights.",
            "itemtype": "property",
            "name": "renderTargetWeights",
            "type": "Material",
            "access": "private",
            "tagname": "",
            "class": "SMAAPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\smaa.js",
            "line": 54,
            "description": "SMAA color edge detection shader material.",
            "itemtype": "property",
            "name": "colorEdgesMaterial",
            "type": "SMAAColorEdgesMaterial",
            "access": "private",
            "tagname": "",
            "class": "SMAAPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\smaa.js",
            "line": 64,
            "description": "SMAA weights shader material.",
            "itemtype": "property",
            "name": "weightsMaterial",
            "type": "SMAAWeightsMaterial",
            "access": "private",
            "tagname": "",
            "class": "SMAAPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\smaa.js",
            "line": 100,
            "description": "SMAA blend shader material.",
            "itemtype": "property",
            "name": "blendMaterial",
            "type": "SMAABlendMaterial",
            "access": "private",
            "tagname": "",
            "class": "SMAAPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\smaa.js",
            "line": 116,
            "description": "Antialiases the scene.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "SMAAPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\smaa.js",
            "line": 144,
            "description": "Updates this pass with the renderer's size.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- The width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- The height.",
                    "type": "Number"
                }
            ],
            "class": "SMAAPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\texture.js",
            "line": 24,
            "description": "A copy shader material used for rendering to texture.",
            "itemtype": "property",
            "name": "copyMaterial",
            "type": "CopyMaterial",
            "access": "private",
            "tagname": "",
            "class": "TexturePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\texture.js",
            "line": 43,
            "description": "The texture.",
            "itemtype": "property",
            "name": "texture",
            "type": "Texture",
            "class": "TexturePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\texture.js",
            "line": 58,
            "description": "The opacity.",
            "itemtype": "property",
            "name": "opacity",
            "type": "Number",
            "default": "1.0",
            "class": "TexturePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\texture.js",
            "line": 74,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                }
            ],
            "class": "TexturePass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 5,
            "description": "Rounds the given number up to the next power of two.",
            "itemtype": "method",
            "name": "ceil2",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "n",
                    "description": "- A number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The next power of two.",
                "type": "Number"
            },
            "class": "ToneMappingPass",
            "module": "postprocessing"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 46,
            "description": "Render target for the current limonosity.",
            "itemtype": "property",
            "name": "renderTargetLuminosity",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "todo": [
                ": use RED format in WebGL 2.0."
            ],
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 63,
            "description": "Adapted luminance render target.",
            "itemtype": "property",
            "name": "renderTargetLuminosity",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 76,
            "description": "Render target that holds a copy of the adapted limonosity.",
            "itemtype": "property",
            "name": "renderTargetX",
            "type": "WebGLRenderTarget",
            "access": "private",
            "tagname": "",
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 86,
            "description": "Copy shader material used for saving the luminance map.",
            "itemtype": "property",
            "name": "copyMaterial",
            "type": "CopyMaterial",
            "access": "private",
            "tagname": "",
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 96,
            "description": "Luminosity shader material.",
            "itemtype": "property",
            "name": "luminosityMaterial",
            "type": "LuminosityMaterial",
            "access": "private",
            "tagname": "",
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 108,
            "description": "Adaptive luminance shader material.",
            "itemtype": "property",
            "name": "adaptiveLuminosityMaterial",
            "type": "AdaptiveLuminosityMaterial",
            "access": "private",
            "tagname": "",
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 120,
            "description": "Tone mapping shader material.",
            "itemtype": "property",
            "name": "toneMappingMaterial",
            "type": "ToneMappingMaterial",
            "access": "private",
            "tagname": "",
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 134,
            "description": "The resolution of the render targets. Must be a power of two.",
            "itemtype": "property",
            "name": "resolution",
            "type": "Number",
            "default": "256",
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 157,
            "description": "Whether this pass uses adaptive luminosity.",
            "itemtype": "property",
            "name": "adaptive",
            "type": "Boolean",
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 184,
            "description": "Renders the effect.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer to use.",
                    "type": "WebGLRenderer"
                },
                {
                    "name": "readBuffer",
                    "description": "- The read buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "writeBuffer",
                    "description": "- The write buffer.",
                    "type": "WebGLRenderTarget"
                },
                {
                    "name": "delta",
                    "description": "- The render delta time.",
                    "type": "Number"
                }
            ],
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        },
        {
            "file": "src\\passes\\tone-mapping.js",
            "line": 237,
            "description": "Renders something into the previous luminosity texture.",
            "itemtype": "method",
            "name": "initialise",
            "params": [
                {
                    "name": "renderer",
                    "description": "- The renderer.",
                    "type": "WebGLRenderer"
                }
            ],
            "class": "ToneMappingPass",
            "module": "postprocessing",
            "submodule": "passes"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\materials\\luminosity\\index.js:6"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\materials\\luminosity\\index.js:6"
        }
    ]
}